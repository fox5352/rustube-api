name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    if: ${{ steps.check.outputs.skip != 'true' }}
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Check for GitHub Actions Bot
      id: check
      run: |
        if [[ "${{ github.event.head_commit.committer.name }}" == "GitHub Actions" ]]; then
          echo "Skipping workflow run for commit from GitHub Actions bot"
          echo "::set-output name=skip::true"
        else
          echo "::set-output name=skip::false"
        fi

    - uses: actions/checkout@v3

    - name: Build
      run: cargo build --verbose --release --bin rustube-api
      
    - name: Create Release Directory
      run: mkdir release
      
    - name: Move Build Output (Ubuntu)
      if: matrix.platform == 'ubuntu-latest'
      run: mv target/release/rustube-api release/rustube-api-ubuntu
      
    - name: Move Build Output (Windows)
      if: matrix.platform == 'windows-latest'
      run: mv target/release/rustube-api.exe release/rustube-api-windows.exe
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-${{ matrix.platform }}
        path: release
        
    - name: Configure Git
      run: |
        git config --global user.email "christophervos522@gmail.com"
        git config --global user.name "Chris"
        
    - name: Commit Release Folder
      run: |
        git checkout master
        git add release
        git commit -m "Add release artifact"
        git push origin master
