name: RustBot

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
  
    - name: Create Release Directory
      run: |
        if ${{ runner.os }} == 'Windows'
        then
          mkdir release 2> $null
        else
          mkdir -p release
        fi

    - name: Build
      if: github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      run: cargo build --release --bin rustube-api

    - name: Move Build Output (Ubuntu)
      if: matrix.platform == 'ubuntu-latest' &&  github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      run: cp target/release/rustube-api release/rustube-api-ubuntu
      
    - name: Move Build Output (Windows)
      if: matrix.platform == 'windows-latest'&&  github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      run: cp target/release/rustube-api.exe release/rustube-api-windows.exe
      
    - name: Upload Artifact
      if:  github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      uses: actions/upload-artifact@v2
      with:
        name: release-${{ matrix.platform }}
        path: release
      
    - name: Set Git Config
      if: github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        git config user.email "christophervos522@gmail.com"
        git config user.name "christopher"

    - name: "Commit and push release folder"
      if: github.event.head_commit.message != 'Update rust.yml' && github.event.head_commit.message != 'Github Bot'
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        git add release
        git commit -m "Github Bot"
        git push https://$PAT_TOKEN@github.com/${{ github.repository }} HEAD:master
